題目：車輛租賃系統

設計一個車輛租賃系統，該系統可以管理不同類型的車輛（例如汽車、卡車、自行車等）和租賃交易。建立以下類別：Vehicle、Car、Truck、Bicycle 和 RentalTransaction。

Vehicle 類別應該包括以下屬性和方法：

屬性：
車牌號碼（license_plate）
品牌（brand）
租賃狀態（available，初始為True）
方法：
__init__()：初始化車輛的屬性
rent()：將車輛標記為已租賃
return_vehicle()：將車輛標記為可用
__str__()：返回車輛的描述字符串
Car、Truck 和 Bicycle 類別應該繼承自 Vehicle 類別，並可以添加特定於每種車輛類型的屬性和方法。例如，Car 可能包括車型（model）、座位數（seats）等屬性，以及特定於汽車的方法（例如啟動引擎、停車等）。

RentalTransaction 類別應該包括以下屬性和方法：

屬性：
租賃日期（rental_date）
租賃時長（duration）
租賃的車輛（vehicle）
租賃費用（rental_fee）
方法：
__init__()：初始化租賃交易的屬性
calculate_rental_fee()：計算租賃費用，根據租賃時長和租賃的車輛類型不同而有所不同
__str__()：返回租賃交易的描述字符串
設計這個系統的類別和方法，並示範如何使用它們來執行以下操作：

創建不同類型的車輛（汽車、卡車、自行車等）
租賃車輛並記錄租賃交易
計算租賃費用
列出所有可用車輛
列出所有租賃交易
這個題目可以幫助學生練習OOP設計，以及如何建立不同類別之間的繼承關係。

==========================================================================

題目：圖書館管理系統

假設你要設計一個簡單的圖書館管理系統，該系統需要管理圖書館的書籍、讀者和借閱記錄。請設計一個OOP架構，包括以下三個主要類別：Book、Reader和Library。

Book 類別應該包括以下屬性和方法：

屬性：
書名（title）
作者（author）
ISBN號碼（isbn）
是否被借閱（checked_out，初始為False）
方法：
__init__()：初始化書籍的屬性
check_out()：將書籍標記為已借閱
check_in()：將書籍標記為已歸還
__str__()：返回書籍的描述字符串
Reader 類別應該包括以下屬性和方法：

屬性：
姓名（name）
借閱紀錄（個人已借閱的書籍清單）
方法：
__init__()：初始化讀者的屬性
borrow_book(book)：借閱一本書，將書籍添加到個人借閱紀錄
return_book(book)：歸還一本書，從個人借閱紀錄中移除書籍
list_borrowed_books()：列出已借閱的書籍清單
__str__()：返回讀者的描述字符串
Library 類別應該包括以下屬性和方法：

屬性：
書籍清單（包含所有圖書館內的書籍）
方法：
__init__()：初始化圖書館的屬性
add_book(book)：將一本書添加到圖書館的書籍清單
remove_book(book)：從圖書館的書籍清單中移除一本書
list_books()：列出所有在圖書館的書籍
find_available_books()：列出可供借閱的書籍
find_checked_out_books()：列出已借閱的書籍
find_reader_borrowed_books(reader)：列出特定讀者已借閱的書籍
設計這個系統的類別和方法，並示範如何使用它們來執行以下操作：

創建幾本書籍和幾位讀者
將書籍添加到圖書館
讓讀者借閱書籍並歸還它們
列出圖書館的所有書籍
列出可供借閱的書籍
列出已借閱的書籍
列出特定讀者已借閱的書籍
這個題目可以幫助學生練習OOP設計，以及如何在Python中實現類別和對象之間的互動。



